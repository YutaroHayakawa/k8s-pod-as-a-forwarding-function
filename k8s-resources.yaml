apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
 name: server0
spec:
 nodeSelector:
   matchLabels:
     kubernetes.io/hostname: clab-k8s-pod-as-a-forwarding-function-control-plane
 virtualRouters:
 - localASN: 65010
   exportPodCIDR: true
   neighbors:
   - podSelector:
       matchLabels:
         app: loadbalancer
     peerASN: 65100
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
 name: server1
spec:
 nodeSelector:
   matchLabels:
     kubernetes.io/hostname: clab-k8s-pod-as-a-forwarding-function-worker
 virtualRouters:
 - localASN: 65011
   exportPodCIDR: true
   neighbors:
   - podSelector:
       matchLabels:
         app: loadbalancer
     peerASN: 65100
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumBGPPeeringPolicy
metadata:
 name: server2
spec:
 nodeSelector:
   matchLabels:
     kubernetes.io/hostname: clab-k8s-pod-as-a-forwarding-function-worker2
 virtualRouters:
 - localASN: 65012
   exportPodCIDR: true
   neighbors:
   - podSelector:
       matchLabels:
         app: loadbalancer
     peerASN: 65100
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-node-getter-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-node-getter-role
rules:
- apiGroups: ["cilium.io"]
  resources: ["ciliumnodes"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-node-getter-rb
subjects:
- kind: ServiceAccount
  name: cilium-node-getter-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: cilium-node-getter-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: loadbalancer
  labels:
    app: loadbalancer
spec:
  nodeName: clab-k8s-pod-as-a-forwarding-function-worker2
  serviceAccountName: cilium-node-getter-sa
  containers:
  - name: frr
    image: yutarohayakawa/frr:alpine-926e00236e
    volumeMounts:
    - name: frr-config
      mountPath: "/etc/frr"
      readOnly: false
    securityContext:
      privileged: true
  initContainers:
  - name: copy-daemons
    image: busybox:latest
    command: ["cp", "/mnt/daemons", "/etc/frr/daemons"]
    volumeMounts:
    - name: frr-config-template
      mountPath: "/mnt"
      readOnly: true
    - name: frr-config
      mountPath: "/etc/frr"
      readOnly: false
  - name: init-frr-config
    image: localhost:5000/resolve-cilium-host-ip:latest
    command: ["/bin/sh", "-c", "sed s/REPLACEME/$(resolve-cilium-host-ip)/g /mnt/frr.conf.template | tee /etc/frr/frr.conf"]
    env:
    - name: NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    volumeMounts:
    - name: frr-config-template
      mountPath: "/mnt"
      readOnly: true
    - name: frr-config
      mountPath: "/etc/frr"
      readOnly: false
  volumes:
  - name: frr-config-template
    configMap:
      name: frr-config-template
  - name: frr-config
    emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frr-config-template
data:
  frr.conf.template: |
    frr defaults datacenter
    ip nht resolve-via-default
    router bgp 65100
      bgp router-id 10.255.1.0
      no bgp ebgp-requires-policy
      neighbor ROUTER peer-group
      neighbor ROUTER remote-as external
      neighbor ROUTER ebgp-multihop
      neighbor REPLACEME peer-group ROUTER
      address-family ipv4 unicast
        redistribute connected
      exit-address-family
  daemons: |
    bgpd=yes
    vtysh_enable=yes
    zebra_options="  -A 127.0.0.1 -s 90000000"
    bgpd_options="   -A 127.0.0.1"
